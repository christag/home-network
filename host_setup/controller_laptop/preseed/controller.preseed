### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/xkb-keymap select us

### Network (DHCP fallback) and Hostname
d-i netcfg/get_hostname string laptop-controller
d-i netcfg/choose_interface select enp62s0
d-i netcfg/disable_dhcp boolean false

### Mirror & packages
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
tasksel tasksel/first multiselect standard, ssh-server
d-i pkgsel/include string git nfs-common network-manager

######  ─── Partitioning ──────────────────────────────────────────

### dual-disk layout  (sda: EFI+swap+/ ,  sdb: /var /usr /home) ###############

d-i partman-auto/disk            string /dev/sda /dev/sdb
d-i partman-auto/method          string regular
d-i partman-auto/choose_recipe   select dual-disk

d-i partman-auto/expert_recipe string \
  dual-disk :: \
    # =====  /dev/sda  =====                               \
    512 512 512 fat32                                      \
        $primary{ } $bootable{ }                          \
        method{ efi } format{ }                           \
        mountpoint{ /boot/efi }                           \
    .                                                      \
    4096 4096 4096 linux-swap                              \
        $primary{ }                                       \
        method{ swap } format{ }                          \
    .                                                      \
    20480 40000 -1 ext4                                    \
        $primary{ }                                       \
        method{ format } format{ }                        \
        use_filesystem{ } filesystem{ ext4 }              \
        mountpoint{ / }                                   \
    .                                                      \
    # =====  /dev/sdb  =====                               \
    10240 10240 10240 ext4                                 \
        device{ /dev/sdb }                                \
        method{ format } format{ }                        \
        use_filesystem{ } filesystem{ ext4 }              \
        mountpoint{ /var }                                \
    .                                                      \
    20480 20480 40960 ext4                                 \
        device{ /dev/sdb }                                \
        method{ format } format{ }                        \
        use_filesystem{ } filesystem{ ext4 }              \
        mountpoint{ /usr }                                \
    .                                                      \
    10240 10240 -1 ext4                                    \
        device{ /dev/sdb }                                \
        method{ format } format{ }                        \
        use_filesystem{ } filesystem{ ext4 }              \
        mountpoint{ /home }                               \
    .

# Skip the confirmation questions
d-i partman/confirm_write_new_label boolean true
d-i partman/choose_partition         select finish
d-i partman/confirm                  boolean true
###############################################################################


### Users
d-i passwd/root-login boolean false
d-i passwd/user-fullname string Docker Controller
d-i passwd/username string docker
d-i passwd/user-uid string 1004
d-i passwd/user-password-crypted password $6$QwaUvH7Q06s3MDDW$RAsEmYo7giqbcuJnLfe/H2TMsj3zs8ZD/xc5wf1LaQ9qSVf2MDUTCRSgFNDThbBkyg6gl7JvN2d4vS2A.K.nV.

### Late-command: install ansible-pull and fetch vault pass
d-i preseed/late_command string \
  in-target wget -qO /root/.vault-pass https://vault.christagliaferro.com/vaultpass ; \
  in-target chmod 600 /root/.vault-pass ; \
  in-target sed -i '/cdrom:/d' /etc/apt/sources.list ; \
  in-target sh -c 'echo "deb http://deb.debian.org/debian bookworm main contrib non-free-firmware" >> /etc/apt/sources.list' ; \
  in-target apt-get update ; \
  in-target apt-get -y install git ufw nfs-common network-manager ansible ; \
  in-target sh -c "printf '%s\n' \
    '[Unit]' \
    'Description=Pull and apply homelab playbook' \
    'After=network-online.target' \
    'Wants=network-online.target' \
    '' \
    '[Service]' \
    'Type=oneshot' \
    'Environment=ANSIBLE_VAULT_PASSWORD_FILE=/root/.vault-pass' \
    'ExecStart=/usr/bin/ansible-pull -U https://github.com/christag/home-network.git -i ansible/inventory/hosts.ini site.yml' \
    '' \
    '[Install]' \
    'WantedBy=multi-user.target' \
    > /etc/systemd/system/ansible-pull.service" \; \
  in-target systemctl daemon-reload \; \
  in-target systemctl enable ansible-pull.service

### Automatically reboot when done
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false